import"./faceplate-expandable-section-helper-786f5daf.js";import"./faceplate-tooltip-f3cee611.js";import"./faceplate-gif-3e2d9c66.js";import{_ as e,n as t,e as i,a as o,ay as s,f3 as a,W as n,p as r,f4 as c,bf as d,l,d1 as p,a3 as u}from"./shell-ceb66a5c.js";import{E as h,C as m}from"./community-widget-edit-modal-c324b874.js";import{s as b,x as y,A as g}from"./icon-04f6a077.js";import{R as f}from"./rpl-tooltip-b4efb8cf.js";import{C as w,a as j}from"./models-a7a2c289.js";import"./community-appearance-entrypoint-e78e3e24.js";import"./reddit-chat-anchor-cee8bbf5.js";import"./achievements-entrypoint-a41baafc.js";import"./popper-controller-d9d10574.js";import"./makeEventDispatcher-28989282.js";import"./contains-1042b204.js";import"./faceplate-switch-input-17cfc01a.js";import"./checked-input-element-a822f47d.js";import"./faceplate-input-dc5282a4.js";import"./input-element-2bee98eb.js";import"./form-common-utils-d3476c65.js";import"./shreddit-pubsub-publisher-08f7aa57.js";let k=class extends b{constructor(){super(...arguments),this.subredditName="",this.pageId=h.Main,this.openModal=async()=>{await this._activateCommunityWidgetEditModalFeature();document.querySelector(`community-widget-edit-modal#${m}`)?.showModal({pageId:this.pageId,widgetId:this.widgetId})},this.onClick=()=>{this.openModal()},this.onKeyPress=e=>{"Enter"!==e.key&&"Space"!==e.key||this.openModal()}}static get styles(){return[o]}_activateCommunityWidgetEditModalFeature(){return s({name:a,routeParams:{subreddit:this.subredditName}})}render(){return y`<slot @click="${this.onClick}" @keypress="${this.onKeyPress}"></slot>`}};e([t({type:String,attribute:"subreddit-name"})],k.prototype,"subredditName",void 0),e([t({type:String,attribute:"page-id"})],k.prototype,"pageId",void 0),e([t({type:String,attribute:"widget-id"})],k.prototype,"widgetId",void 0),k=e([i("community-widget-edit-button")],k);let v=class extends(n(f)){constructor(){super(...arguments),this.country=""}connectedCallback(){super.connectedCallback(),r.get(c)||(this.timeoutHandle=setTimeout((()=>{this.show(),d({country:this.country,name:c,value:"true"})}),1e3))}disconnectedCallback(){super.disconnectedCallback(),this.timeoutHandle&&clearTimeout(this.timeoutHandle)}async show(){const e=l({source:w.RightRailUpsell,action:p.View,noun:j.RightRailUpsell});return this.trackEvent(e),super.show()}async hide(){const e=l({source:w.RightRailUpsell,action:"dismiss",noun:j.RightRailUpsell});return this.trackEvent(e),super.hide()}};e([t({type:String})],v.prototype,"country",void 0),v=e([i("create-channel-coachmark")],v);let C=class extends b{constructor(){super(...arguments),this.container=null,this.dropdowns=null,this.containerSelector="html",this.hideDropdowns=()=>{this.dropdowns?.length&&[...this.dropdowns].forEach((e=>e.close()))},this.hideDropdownsDebounced=u(this.hideDropdowns,200,{leading:!0,trailing:!0})}connectedCallback(){super.connectedCallback(),this.container=document.querySelector(this.containerSelector),this.container&&(this.container.addEventListener("scroll",this.hideDropdownsDebounced,{passive:!0}),this.dropdowns=this.container.getElementsByTagName("faceplate-dropdown-menu"))}disconnectedCallback(){super.disconnectedCallback(),this.container&&this.container.removeEventListener("scroll",this.hideDropdownsDebounced)}render(){return g}};e([t({type:String,attribute:"container-selector"})],C.prototype,"containerSelector",void 0),C=e([i("dropdown-close-on-scroll")],C);
//# sourceMappingURL=subreddit-right-rail-client-js-5e2e84f7.js.map
