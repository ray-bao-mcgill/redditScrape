import"./faceplate-date-50fbcf23.js";import"./faceplate-timeago-e028e92f.js";import"./faceplate-dropdown-menu-f1045f04.js";import"./faceplate-menu-210a1c41.js";import"./faceplate-shimmer-2aa9ab87.js";import"./faceplate-tooltip-f3cee611.js";import"./post-mod-actions-menu-b8aed67e.js";import{f as t,cb as e,cI as i,q as o,c as s,a as n,_ as a,n as r,t as d,e as l,r as c}from"./shell-ceb66a5c.js";import{x as p,d as h,I as m,c as u,cd as b,aH as v,aB as f,ah as y,at as R,E as g,ce as S,i as A,s as w,k,N as O,A as $}from"./icon-04f6a077.js";import{i as j}from"./shreddit-rpl-action-bar-update-feb3e200.js";import{a as P,i as C}from"./mod-actions-controller-2e18cb1d.js";import{H as x}from"./mod-actions-menu-0f2f1031.js";import{C as I}from"./comment-b98532bc.js";import{M as U}from"./modActions-6dc6da5e.js";import{P as M}from"./post-d6ddae05.js";import{P as E}from"./postUpdate-341e461e.js";import{M as z,s as B,a as V,b as T,c as H,d as D,e as F}from"./mod-verdict-83674fe1.js";import"./shreddit-comment-share-button-6a0b39a5.js";import"./shreddit-post-share-button-c665649b.js";import"./locale-e49f0b05.js";import"./relative-date-77173042.js";import"./cached-intl-e5b35306.js";import"./popper-controller-d9d10574.js";import"./makeEventDispatcher-28989282.js";import"./content-action-button-3141f70f.js";import"./list-item-b879d870.js";import"./custom-event-8a5c1c61.js";import"./add-removal-reason-modal-025b665a.js";import"./utils-147dae00.js";import"./modActions-026321e2.js";import"./keyed-d21b1e5c.js";import"./faceplate-form-494ed7ef.js";import"./form-common-utils-d3476c65.js";import"./post-466a3c03.js";import"./faceplate-input-dc5282a4.js";import"./input-element-2bee98eb.js";import"./rpl-tooltip-b4efb8cf.js";import"./contains-1042b204.js";import"./dropdownButton-38c393e7.js";import"./faceplate-modal-b5af7f91.js";import"./faceplate-textarea-input-25459e07.js";import"./live-2ab1644c.js";import"./text-input-5a8d8b87.js";import"./remove-highlighted-post-dca2deb9.js";import"./utils-75a02ea9.js";import"./pdp-a697afbf.js";import"./throttle-cde4a556.js";import"./click-card-31793218.js";import"./faceplate-hovercard-99b1d0ca.js";import"./post-guidance-feedback-f6353f91.js";import"./faceplate-bottom-sheet-d2dd0726.js";import"./TinyGesture-6f7cc1aa.js";import"./faceplate-bottom-sheet-header-880587a2.js";import"./with-share-daaf701c.js";import"./a-38b76b01.js";import"./index-6b6f75e3.js";import"./comments-b57c5da8.js";let L=class extends(t(w)){constructor(){super(...arguments),this.feedViewType=e.ModQueueCompactView,this.viewContext=M.CommentsPage,this.itemState=z.UNMODERATED,this.hasReports=!1,this.isModMode=!1,this.isRemoved=!1,this.isDeleted=!1,this.isLocked=!1,this.isStickied=!1,this.isHighlighted=!1,this.isCurrentUserAuthor=!1,this.hasParent=!1,this.isIconOnly=!1,this.hasRemovalReason=!1,this.permalink="",this.isDesktopViewport=!1,this.isSpamFilteredPost=!1,this.isProfilePost=!1,this.isPromotedPost=!1,this.hasFlairPermissions=!1,this.areHighlightsEnabled=!1,this.hideInlineActions=!1,this.moderationState=z.UNMODERATED,this._handleThingUpdate=t=>{let e="";if("awardOnContentId"in t?e=t.awardOnContentId:"commentId"in t?e=t.commentId:"postId"in t&&(e=t.postId),e!==this.thingId)return;const{value:i}=t;switch(t.action){case E.approve:case I.approve:case P.approve:case I.approveOptimistic:this.hasRemovalReason=!1,this.isRemoved=!1,this.moderationState=z.APPROVED;break;case E.remove:case E.removeAsSpam:case E.confirmRemoval:case I.remove:case I.removeAsSpam:case I.confirmRemoval:case P.remove:case P.confirmRemoval:case I.removeOptimistic:case I.removeAsSpamOptimistic:case I.confirmRemovalOptimistic:this.isRemoved=!0,this.moderationState=z.REMOVED;break;case E.addRemovalReason:case I.addRemovalReason:this.hasRemovalReason=!0;break;case E.updateHighlightedPost:this.isHighlighted=i;break;case E.lock:case I.lock:this.isLocked=i;break;case E.delete:this.isDeleted=i;break;case E.sticky:case I.sticky:this.isStickied=i}}}get itemType(){return this.thingId?C(this.thingId):null}get isPost(){return this.itemType===i.Post}get isCompactView(){return this.feedViewType===e.CompactView}get isOnModqueuePage(){return this.viewContext===M.ModQueue||this.viewContext===M.ModQueueAll}get isApproved(){return this.moderationState===z.APPROVED}get shouldShowConfirmRemoval(){return B(this.moderationState,this.isSpamFilteredPost)}get shouldShowActionInline(){return V(this.viewContext,this.feedViewType)&&!this.isIconOnly&&!this.hideInlineActions}get isStickyable(){const t=!(this.viewContext===M.ProfileFeed||this.viewContext===M.ProfileFeed2),e=this.isCurrentUserAuthor&&!this.hasParent;return this.isPost?t:t&&e}get itemTopic(){switch(this.itemType){case i.Award:return o.AwardOnContentUpdated;case i.Comment:return o.CommentUpdated;case i.Post:return o.PostUpdated;default:return null}}connectedCallback(){super.connectedCallback(),this.moderationState=this.itemState,this.itemTopic&&this.subscribe(this.itemTopic,this._handleThingUpdate)}disconnectedCallback(){super.disconnectedCallback(),this.itemTopic&&this.unsubscribe(this.itemTopic,this._handleThingUpdate)}getApproveButtonAppearance(){const t=j()?"bordered":"secondary";return this.isCompactView?t:this.shouldShowConfirmRemoval||this.hasReports?"primary":(this.moderationState,z.REMOVED,t)}renderApproveAction(){return(this.isModMode||this.isOnModqueuePage)&&T(this.moderationState)?p`\n <mod-action-button \n aria-label="Approve content" \n data-mod-action="${U.ApproveContent}" \n button-appearance="${this.getApproveButtonAppearance()}" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center" \n>${h({attributes:{"aria-hidden":"true"},size:m.Small})}</span>\n <span slot="text">Approve</span>\n </mod-action-button>\n `:null}renderRemoveAction(){return(this.isModMode||this.isOnModqueuePage)&&H(this.moderationState)?p`\n <mod-action-button \n aria-label="Remove content" \n data-mod-action="${U.RemoveContent}" \n button-appearance="${j()?"bordered":"secondary"}" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center" \n>${u({attributes:{"aria-hidden":"true"},size:m.Small})}</span>\n <span slot="text">\n Remove\n </span>\n </mod-action-button>\n `:null}renderConfirmRemovalAction(){return(this.isModMode||this.isOnModqueuePage)&&this.shouldShowConfirmRemoval?p`\n <mod-action-button \n aria-label="Confirm Removal" \n data-mod-action="${U.ConfirmRemoval}" \n button-appearance="${j()?"bordered":"secondary"}" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center" \n>${u({attributes:{"aria-hidden":"true"},size:m.Small})}</span>\n <span slot="text">\n Confirm Removal\n </span>\n </mod-action-button>\n `:null}renderSpamAction(){return D({moderationState:this.moderationState,isSpamFilteredPost:this.isSpamFilteredPost,isRemoved:this.isRemoved,isPromotedPost:this.isPromotedPost})&&this.shouldShowActionInline?p`\n <mod-action-button \n aria-label="Remove content as spam" \n data-mod-action="${U.RemoveContentAsSpam}" \n button-appearance="plain" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center" \n>${b({attributes:{"aria-hidden":"true"},size:m.Small})}</span>\n <span slot="text">\n Spam\n </span>\n </mod-action-button>\n `:null}renderFlairAction(){return this.isPost&&this.shouldShowActionInline?p` <mod-action-button \n aria-label="Open post flair modal" \n data-mod-action="${U.OpenEditPostFlairModal}" \n button-appearance="plain" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center" \n>${v({attributes:{"aria-hidden":"true"},size:m.Small})}</span>\n <span slot="text">\n Flair\n </span>\n </mod-action-button>`:null}renderAddRemovalReasonAction(){return(this.isModMode||this.isOnModqueuePage)&&this.itemType!==i.Award&&F(this.moderationState,this.hasRemovalReason,this.isSpamFilteredPost,this.isProfilePost)?p`\n <mod-action-button \n aria-label="Add removal reason" \n data-mod-action="${U.AddRemovalReason}" \n button-appearance="${j()?"bordered":"secondary"}" \n ?show-full-buttons="${!0}" \n>\n <span slot="icon" class="flex justify-center" \n>${f({attributes:{"aria-hidden":"true"},size:m.Small})}</span>\n <span slot="text">\n Add removal reason\n </span>\n </mod-action-button>\n ${this.isIconOnly?p`<div class="separator"></div>`:null}\n `:null}renderCopyLinkAction(){return this.shouldShowActionInline?this.isPost?p`<shreddit-post-share-button \n ?use-button="${!0}" \n ?is-desktop-viewport="${this.isDesktopViewport}" \n permalink="${this.permalink}" \n size="${s.Small}" \n ?show-full-buttons="${!this.isIconOnly}" \n></shreddit-post-share-button>`:p`<shreddit-comment-share-button \n slot="comment-share" \n ?use-button="${!0}" \n ?is-desktop-viewport="${this.isDesktopViewport}" \n permalink="${this.permalink}" \n ?show-full-buttons="${!this.isIconOnly}" \n></shreddit-comment-share-button>`:null}renderLockAction(){if(!this.shouldShowActionInline||this.isLocked)return null;const t="Lock";return p` <mod-action-button \n aria-label="${t}" \n data-mod-action="${U.Lock}" \n event-noun="lock" \n button-appearance="plain" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center">\n ${y({attributes:{"aria-hidden":"true"},size:m.Small})}\n </span>\n <span slot="text"> ${t} </span>\n </mod-action-button>`}renderUnlockAction(){if(!this.shouldShowActionInline||!this.isLocked)return null;const t="Unlock";return p` <mod-action-button \n aria-label="${t}" \n data-mod-action="${U.Unlock}" \n event-noun="unlock" \n button-appearance="plain" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center">\n ${R({attributes:{"aria-hidden":"true"},size:m.Small})}\n </span>\n <span slot="text"> ${t} </span>\n </mod-action-button>`}renderStickyAction(){if(!this.isStickyable||!this.shouldShowActionInline||this.isStickied||this.areHighlightsEnabled)return null;const t="Sticky";return p` <mod-action-button \n aria-label="${t}" \n data-mod-action="${U.Sticky}" \n event-noun="sticky" \n button-appearance="plain" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center">\n ${g({attributes:{"aria-hidden":"true"},size:m.Small})}\n </span>\n <span slot="text"> ${t} </span>\n </mod-action-button>`}renderUnstickyAction(){if(!this.isStickyable||!this.shouldShowActionInline||!this.isStickied||this.areHighlightsEnabled)return null;const t="Unsticky";return p` <mod-action-button \n aria-label="${t}" \n data-mod-action="${U.Unsticky}" \n event-noun="unsticky" \n button-appearance="plain" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center">\n ${S({attributes:{"aria-hidden":"true"},size:m.Small})}\n </span>\n <span slot="text"> ${t} </span>\n </mod-action-button>`}renderAddToHighlightsAction(){if(!this.isStickyable||!this.shouldShowActionInline||!this.areHighlightsEnabled||!x.has(this.viewContext)||this.isHighlighted)return null;const t="Add to highlights";return p` <mod-action-button \n aria-label="${t}" \n data-mod-action="${U.UpdateHighlightedPost}" \n event-noun="highlight" \n button-appearance="plain" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center">\n ${g({attributes:{"aria-hidden":"true"},size:m.Small})}\n </span>\n <span slot="text"> ${t} </span>\n </mod-action-button>`}renderRemoveFromHighlightsAction(){if(!(this.isStickyable&&this.shouldShowActionInline&&this.areHighlightsEnabled&&x.has(this.viewContext)&&this.isHighlighted))return null;const t="Remove from highlights";return p` <mod-action-button \n aria-label="${t}" \n data-mod-action="${U.RemoveHighlightedPost}" \n event-noun="unhighlight" \n button-appearance="plain" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center">\n ${S({attributes:{"aria-hidden":"true"},size:m.Small})}\n </span>\n <span slot="text"> ${t} </span>\n </mod-action-button>`}render(){return p`\n ${this.renderAddRemovalReasonAction()} ${this.renderApproveAction()}\n ${this.renderRemoveAction()} ${this.renderConfirmRemovalAction()} ${this.renderSpamAction()}\n ${this.renderFlairAction()} ${this.renderLockAction()} ${this.renderUnlockAction()}\n ${this.renderCopyLinkAction()} ${this.renderStickyAction()} ${this.renderUnstickyAction()}\n ${this.renderAddToHighlightsAction()} ${this.renderRemoveFromHighlightsAction()}\n `}};L.styles=[n,A`:host{display:flex;gap:var(--spacer-xs)}.separator{border-left:1px solid rgb(0,0,0,.1);width:1px;height:32px}`],a([r({type:String,attribute:"thing-id"})],L.prototype,"thingId",void 0),a([r({type:String,attribute:"feed-view-type"})],L.prototype,"feedViewType",void 0),a([r({type:String,attribute:"view-context"})],L.prototype,"viewContext",void 0),a([r({type:String,attribute:"item-state"})],L.prototype,"itemState",void 0),a([r({type:Boolean,attribute:"has-reports"})],L.prototype,"hasReports",void 0),a([r({type:Boolean,attribute:"mod-mode"})],L.prototype,"isModMode",void 0),a([r({type:Boolean,attribute:"removed"})],L.prototype,"isRemoved",void 0),a([r({type:Boolean,attribute:"deleted"})],L.prototype,"isDeleted",void 0),a([r({type:Boolean,attribute:"locked"})],L.prototype,"isLocked",void 0),a([r({type:Boolean,attribute:"stickied"})],L.prototype,"isStickied",void 0),a([r({type:Boolean,attribute:"highlighted"})],L.prototype,"isHighlighted",void 0),a([r({type:Boolean,attribute:"current-user-author"})],L.prototype,"isCurrentUserAuthor",void 0),a([r({type:Boolean,attribute:"has-parent"})],L.prototype,"hasParent",void 0),a([r({type:Boolean,attribute:"icon-only"})],L.prototype,"isIconOnly",void 0),a([r({type:Boolean,attribute:"has-removal-reason"})],L.prototype,"hasRemovalReason",void 0),a([r({type:String,attribute:"permalink"})],L.prototype,"permalink",void 0),a([r({type:Boolean,attribute:"is-desktop-viewport"})],L.prototype,"isDesktopViewport",void 0),a([r({type:Boolean,attribute:"is-spam-filtered-post"})],L.prototype,"isSpamFilteredPost",void 0),a([r({type:Boolean,attribute:"is-profile-post"})],L.prototype,"isProfilePost",void 0),a([r({type:Boolean,attribute:"is-promoted-post"})],L.prototype,"isPromotedPost",void 0),a([r({type:Boolean,attribute:"has-flair-permissions"})],L.prototype,"hasFlairPermissions",void 0),a([r({type:Boolean,attribute:"highlights-enabled"})],L.prototype,"areHighlightsEnabled",void 0),a([r({type:Boolean,attribute:"hide-inline-actions"})],L.prototype,"hideInlineActions",void 0),a([d()],L.prototype,"moderationState",void 0),L=a([l("shreddit-mod-inline-actions")],L);const W=t(w);let q=class extends W{constructor(){super(...arguments),this.parentOfModVerdictSlotElementWidth=0,this.removed=!1,this.thingId="",this.shouldIgnoreParentWidth=!1,this.minWidthToShowLabel=460,this.onCommentUpdateAction=t=>{if(t.commentId!==this.thingId)return;const{action:e}=t;switch(e){case I.approve:case I.approveOptimistic:this.removed=!1;break;case I.remove:case I.removeAsSpam:case I.confirmRemoval:case I.removeOptimistic:case I.removeAsSpamOptimistic:case I.confirmRemovalOptimistic:this.removed=!0}},this.onPostUpdateAction=t=>{if(t.postId!==this.thingId)return;const{action:e}=t;switch(e){case E.approve:case E.approveOptimistic:this.removed=!1;break;case E.remove:case E.removeAsSpam:case E.confirmRemoval:case E.removeOptimistic:case E.removeAsSpamOptimistic:case E.confirmRemovalOptimistic:this.removed=!0}},this.onAwardOnContentUpdateAction=t=>{if(t.awardOnContentId!==this.thingId)return;const{action:e}=t;switch(e){case P.approve:this.removed=!1;break;case P.remove:case P.confirmRemoval:this.removed=!0}}}connectedCallback(){super.connectedCallback(),this.initializeResizeObserver(),this.subscribe(o.PostUpdated,this.onPostUpdateAction),this.subscribe(o.CommentUpdated,this.onCommentUpdateAction),this.subscribe(o.AwardOnContentUpdated,this.onAwardOnContentUpdateAction)}disconnectedCallback(){this.cleanupResizeObserver(),super.disconnectedCallback(),this.unsubscribe(o.PostUpdated,this.onPostUpdateAction),this.unsubscribe(o.CommentUpdated,this.onCommentUpdateAction),this.unsubscribe(o.AwardOnContentUpdated,this.onAwardOnContentUpdateAction)}initializeResizeObserver(){this.parentOfModVerdictSlotElement=this.closest('[slot="mod-verdict"]')?.parentElement,this.parentOfModVerdictSlotElement&&(this.resizeObserver=new ResizeObserver((t=>{for(const e of t)this.parentOfModVerdictSlotElementWidth=e.contentRect.width})),this.resizeObserver.observe(this.parentOfModVerdictSlotElement))}cleanupResizeObserver(){this.resizeObserver&&this.parentOfModVerdictSlotElement&&this.resizeObserver.unobserve(this.parentOfModVerdictSlotElement)}render(){return p`\n <span class="inline-flex items-center gap-xs text-12 text-neutral-content w-full">\n <div class="relative">\n <slot name="verdict-indicator-avatar"></slot>\n <div \n aria-hidden="true" \n class="absolute bottom-0 -right-px flex justify-center items-center h-md w-md rounded-full border-solid border-md border-neutral-background scale-75 origin-bottom-right translate-y-px ${this.removed?"bg-red-200 text-red-700":"bg-kiwigreen-200 text-kiwigreen-700"}" \n>\n ${this.removed?O({size:m.ExtraSmall}):k({size:m.ExtraSmall})}\n </div>\n </div>\n ${this.shouldShowLabel?p`<slot name="verdict-indicator-label"></slot>`:""}\n </span>\n `}get shouldShowLabel(){return this.shouldIgnoreParentWidth||this.parentOfModVerdictSlotElementWidth>=this.minWidthToShowLabel}};q.styles=[n],a([d()],q.prototype,"parentOfModVerdictSlotElementWidth",void 0),a([d()],q.prototype,"parentOfModVerdictSlotElement",void 0),a([r({type:Boolean,reflect:!0})],q.prototype,"removed",void 0),a([r({type:String,attribute:"thing-id"})],q.prototype,"thingId",void 0),a([r({type:Boolean,attribute:"ignore-parent-width"})],q.prototype,"shouldIgnoreParentWidth",void 0),q=a([l("mod-verdict-indicator-component")],q);let N=class extends w{constructor(){super(...arguments),this.iconOnly=!1,this.pubsub=new c(this),this.handleCommentUpdate=({commentId:t,action:e,value:i})=>{if(t===this.thingId)switch(e){case I.addRemovalReason:this.hasRemovalReason=Boolean(i);break;case I.approve:case I.approveOptimistic:this.hasRemovalReason=!0,this.isRemoved=!1;break;case I.remove:case I.removeAsSpam:case I.removeOptimistic:case I.removeAsSpamOptimistic:case I.confirmRemovalOptimistic:this.hasRemovalReason=!1,this.isRemoved=!0}},this.handlePostUpdate=({postId:t,action:e,value:i})=>{if(t===this.thingId)switch(e){case E.addRemovalReason:this.hasRemovalReason=Boolean(i);break;case E.approve:case E.approveOptimistic:this.hasRemovalReason=!0,this.isRemoved=!1;break;case E.remove:case E.removeAsSpam:case E.removeOptimistic:case E.removeAsSpamOptimistic:case E.confirmRemovalOptimistic:this.isRemoved=!0,this.hasRemovalReason=!1}},this.updateModVerdict=t=>{const e=this.closest('[slot="mod-verdict"]');t&&this.isRemoved?e?.setAttribute("show-removal-reason-cta",""):e?.removeAttribute("show-removal-reason-cta")},this.shouldShowCta=()=>{const t=this.isRemoved?z.REMOVED:z.UNMODERATED;return F(t,!!this.hasRemovalReason,!!this.isContentSpamFilteredPost,this.isProfilePost)}}connectedCallback(){super.connectedCallback();const t=this.closest('[slot="mod-verdict"]')?.parentElement;this.resizeObserver=new ResizeObserver((t=>{for(const e of t)e.contentRect.width<500?this.iconOnly=!0:this.iconOnly=!1})),this.resizeObserver.observe(t),this.pubsub.subscribe(o.CommentUpdated,this.handleCommentUpdate),this.pubsub.subscribe(o.PostUpdated,this.handlePostUpdate),this.updateModVerdict(!this.hasRemovalReason)}disconnectedCallback(){super.disconnectedCallback();const t=this.closest('[slot="mod-verdict"]')?.parentElement;this.resizeObserver.unobserve(t),this.resizeObserver.disconnect(),this.pubsub.unsubscribe(o.CommentUpdated,this.handleCommentUpdate),this.pubsub.unsubscribe(o.PostUpdated,this.handlePostUpdate)}updated(t){super.updated(t),t.has("hasRemovalReason")&&this.updateModVerdict(!this.hasRemovalReason)}render(){return this.hasRemovalReason||!this.shouldShowCta()?$:p`\n <mod-action-button \n aria-label="Add removal reason" \n data-mod-action="${U.AddRemovalReason}" \n button-appearance="secondary" \n ?show-full-buttons="${!0}" \n>\n <span slot="icon" class="flex justify-center">\n ${f({attributes:{"aria-hidden":"true"},size:m.Small})}\n </span>\n <span slot="text" class="flex">\n ${this.iconOnly?f({attributes:{"aria-hidden":"true"},size:m.Small}):"Add removal reason"}\n </span>\n </mod-action-button>\n `}};N.styles=[n],a([r({type:String,attribute:"thing-id"})],N.prototype,"thingId",void 0),a([r({type:Boolean,attribute:"has-removal-reason"})],N.prototype,"hasRemovalReason",void 0),a([d()],N.prototype,"iconOnly",void 0),a([r({type:Boolean,attribute:"is-removed"})],N.prototype,"isRemoved",void 0),a([r({type:Boolean,attribute:"is-content-spam-filtered-post"})],N.prototype,"isContentSpamFilteredPost",void 0),a([r({type:Boolean,attribute:"is-profile-post"})],N.prototype,"isProfilePost",void 0),N=a([l("responsive-add-removal-reason-cta")],N);
//# sourceMappingURL=mod-inline-actions-client-js-3b7f1749.js.map
