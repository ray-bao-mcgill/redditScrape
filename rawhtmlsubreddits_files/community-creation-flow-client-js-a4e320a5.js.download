import"./shreddit-slotter-6617ee81.js";import{W as t,_ as o,n as e,e as i,a}from"./shell-ceb66a5c.js";import{i as r}from"./community-creation-walkthrough-20ae241b.js";import{s,x as m}from"./icon-04f6a077.js";import"./community-creation-walkthrough-images-90f52d25.js";import"./custom-event-dispatch-wrapper-35f1d6da.js";import"./action-components-bbf589b6.js";import"./faceplate-modal-b5af7f91.js";import"./index-daf57838.js";import"./index-077cf609.js";import"./upload-to-s3-a404e163.js";import"./ui-strings-4cc98385.js";import"./faceplate-textarea-input-25459e07.js";import"./live-2ab1644c.js";import"./text-input-5a8d8b87.js";import"./form-common-utils-d3476c65.js";import"./faceplate-input-dc5282a4.js";import"./input-element-2bee98eb.js";import"./faceplate-text-input-999c3dd8.js";import"./faceplate-form-494ed7ef.js";import"./community-image-upload-fba69651.js";import"./validate-image-e817e711.js";import"./list-item-b879d870.js";import"./index-25239bfe.js";import"./chip-2a5c390a.js";import"./avatar-44580e3b.js";import"./pluralize-d67ab3f8.js";const c=t(s);let p=class extends c{constructor(){super(...arguments),this.walkthrough=!1,this.dialogId=""}static get styles(){return[a]}async connectedCallback(){super.connectedCallback(),this.walkthrough?this.communityCreationModal=document.getElementById(this.dialogId):(this.communityCreationModal=document.querySelector("community-creation-modal"),document.body.getElementsByTagName("shreddit-app")[0]?.append(this.communityCreationModal))}showModal(){this.walkthrough&&this.trackEvent(r()),this.communityCreationModal?.showModal()}disconnectedCallback(){super.disconnectedCallback()}render(){return m`<slot></slot>`}};o([e({type:Boolean})],p.prototype,"walkthrough",void 0),o([e({type:String,attribute:"dialog-id"})],p.prototype,"dialogId",void 0),p=o([i("community-creation-flow")],p);
//# sourceMappingURL=community-creation-flow-client-js-a4e320a5.js.map
